{"map":"{\"version\":3,\"sources\":[\"/Users/lesleysablatura/Desktop/reactflask/react-frontend/src/Home.js\",\"/Users/lesleysablatura/Desktop/reactflask/react-frontend/src/Form.js\",\"/Users/lesleysablatura/Desktop/reactflask/react-frontend/src/Weather.js\",\"/Users/lesleysablatura/Desktop/reactflask/react-frontend/src/App.js\",\"/Users/lesleysablatura/Desktop/reactflask/react-frontend/src/serviceWorker.js\",\"/Users/lesleysablatura/Desktop/reactflask/react-frontend/src/index.js\"],\"names\":[\"Home\",\"react_default\",\"a\",\"createElement\",\"Form\",\"props\",\"onSubmit\",\"getWeather\",\"type\",\"name\",\"placeholder\",\"Button_default\",\"Weather\",\"temperature\",\"description\",\"error\",\"API_KEY\",\"App\",\"state\",\"undefined\",\"city\",\"country\",\"_callee\",\"e\",\"api_call\",\"data\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"preventDefault\",\"target\",\"elements\",\"value\",\"fetch\",\"concat\",\"sent\",\"json\",\"_this\",\"setState\",\"main\",\"temp\",\"sys\",\"weather\",\"stop\",\"className\",\"src_Home\",\"src_Form\",\"this\",\"src_Weather\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"oQAWeA,EATF,WACT,OACIC,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,KAAA,KAAA,iBACAF,EAAAC,EAAAC,cAAA,IAAA,KAAA,yFCUGC,EAXF,SAAAC,GACT,OACIJ,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,OAAA,CAAMG,SAAUD,EAAME,YAClBN,EAAAC,EAAAC,cAAA,QAAA,CAAOK,KAAK,OAAOC,KAAK,OAAOC,YAAY,eAC3CT,EAAAC,EAAAC,cAAA,QAAA,CAAOK,KAAK,OAAOC,KAAK,UAAUC,YAAY,kBAC9CT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAQM,KAAK,WAAb,qBCADI,EATC,SAAAP,GACZ,OACIJ,EAAAC,EAAAC,cAAA,MAAA,KACKE,EAAMQ,aAAeZ,EAAAC,EAAAC,cAAA,IAAA,KAAA,gBAAiBE,EAAMQ,aAC5CR,EAAMS,aAAeb,EAAAC,EAAAC,cAAA,IAAA,KAAA,eAAgBE,EAAMS,aAC3CT,EAAMU,OAASd,EAAAC,EAAAC,cAAA,IAAA,KAAIE,EAAMU,SCChCC,EAAU,mCAqDDC,6MAlDbC,MAAQ,CACNL,iBAAaM,EACbC,UAAMD,EACNE,aAASF,EACTL,iBAAaK,KAGfZ,iDAAa,SAAAe,EAAMC,GAAN,IAAAH,EAAAC,EAAAG,EAAAC,EAAA,OAAAC,EAAAxB,EAAAyB,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OACXP,EAAEQ,iBACIX,EAAOG,EAAES,OAAOC,SAASb,KAAKc,MAC9Bb,EAAUE,EAAES,OAAOC,SAASZ,QAAQa,MAH/BN,EAAAE,KAAA,EAIYK,MAAK,oDAAAC,OAC0BhB,EAD1B,KAAAgB,OACkCf,EADlC,WAAAe,OACmDpB,EADnD,oBAJjB,KAAA,EAAA,OAILQ,EAJKI,EAAAS,KAAAT,EAAAE,KAAA,EAOQN,EAASc,OAPjB,KAAA,EAOLb,EAPKG,EAAAS,KASPjB,GAAQC,EACVkB,EAAKC,SAAS,CACZ3B,YAAaY,EAAKgB,KAAKC,KACvBtB,KAAMK,EAAKhB,KACXY,QAASI,EAAKkB,IAAItB,QAClBP,YAAaW,EAAKmB,QAAQ,GAAG9B,cAG/ByB,EAAKC,SAAS,CACZ3B,iBAAaM,EACbC,UAAMD,EACNE,aAASF,EACTL,iBAAaK,EACbJ,MAAO,8CAtBA,KAAA,GAAA,IAAA,MAAA,OAAAa,EAAAiB,SAAAvB,oIA2BX,OACErB,EAAAC,EAAAC,cAAA,MAAA,CAAK2C,UAAU,WACb7C,EAAAC,EAAAC,cAAC4C,EAAD,MACA9C,EAAAC,EAAAC,cAAC6C,EAAD,CAAMzC,WAAY0C,KAAK1C,aACvBN,EAAAC,EAAAC,cAAC+C,EAAD,CACErC,YAAaoC,KAAK/B,MAAML,YACxBO,KAAM6B,KAAK/B,MAAML,YACjBQ,QAAS4B,KAAK/B,MAAMG,QACpBP,YAAamC,KAAK/B,MAAMJ,YACxBC,MAAOkC,KAAK/B,MAAMH,gBA5CVoC,EAAAA,WCEEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,EAAAA,EAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from \\\"react\\\";\\n\\nconst Home = () => {\\n    return (\\n        <div>\\n            <h1>Weather Today</h1>\\n            <p>Find out today's temperature and conditions anywhere in the world!</p>\\n        </div>\\n    );\\n};\\n\\nexport default Home;\",\"import React from \\\"react\\\";\\nimport Button from 'react-bootstrap/Button';\\n\\n\\n\\nconst Form = props => {\\n    return (\\n        <div>\\n            <form onSubmit={props.getWeather}>\\n                <input type=\\\"text\\\" name=\\\"city\\\" placeholder=\\\"Enter City\\\" />\\n                <input type=\\\"text\\\" name=\\\"country\\\" placeholder=\\\"Enter Country\\\" />\\n                <Button type=\\\"primary\\\">Get My Weather</Button>\\n            </form>\\n        </div>\\n    );\\n};\\nexport default Form;\",\"import React from \\\"react\\\";\\n\\nconst Weather = props => {\\n    return (\\n        <div>\\n            {props.temperature && <p>Temperature: {props.temperature}</p>}\\n            {props.description && <p>Conditions: {props.description}</p>}\\n            {props.error && <p>{props.error}</p>}\\n        </div>\\n    );\\n};\\nexport default Weather;\",\"import React, { Component } from \\\"react\\\";\\nimport { render } from \\\"react-dom\\\";\\nimport Home from \\\"./Home\\\";\\nimport Form from \\\"./Form\\\";\\nimport Weather from \\\"./Weather\\\";\\n\\n\\n\\nconst API_KEY = \\\"52c22aabd27dfb2bbb026631979c4c29\\\";\\n\\nclass App extends Component {\\n  state = {\\n    temperature: undefined,\\n    city: undefined,\\n    country: undefined,\\n    description: undefined\\n  };\\n\\n  getWeather = async e => {\\n    e.preventDefault();\\n    const city = e.target.elements.city.value;\\n    const country = e.target.elements.country.value;\\n    const api_call = await fetch(\\n      `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${API_KEY}&units=imperial`\\n    );\\n    const data = await api_call.json();\\n\\n    if (city && country) {\\n      this.setState({\\n        temperature: data.main.temp,\\n        city: data.name,\\n        country: data.sys.country,\\n        description: data.weather[0].description\\n      });\\n    } else {\\n      this.setState({\\n        temperature: undefined,\\n        city: undefined,\\n        country: undefined,\\n        description: undefined,\\n        error: \\\"Please enter the correct city and country\\\"\\n      });\\n    }\\n  };\\n  render() {\\n    return (\\n      <div className=\\\"wrapper\\\">\\n        <Home />\\n        <Form getWeather={this.getWeather} />\\n        <Weather\\n          temperature={this.state.temperature}\\n          city={this.state.temperature}\\n          country={this.state.country}\\n          description={this.state.description}\\n          error={this.state.error}\\n        />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\n\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{16:function(e,t,r){e.exports=r(34)},22:function(e,t,r){},34:function(e,t,r){\"use strict\";r.r(t);var n=r(0),a=r.n(n),o=r(4),c=r.n(o),i=(r(22),r(5)),u=r.n(i),l=r(9),s=r(10),p=r(11),m=r(14),d=r(12),h=r(15),y=function(){return a.a.createElement(\"div\",null,a.a.createElement(\"h1\",null,\"Weather Today\"),a.a.createElement(\"p\",null,\"Find out today's temperature and conditions anywhere in the world!\"))},v=r(13),w=r.n(v),f=function(e){return a.a.createElement(\"div\",null,a.a.createElement(\"form\",{onSubmit:e.getWeather},a.a.createElement(\"input\",{type:\"text\",name:\"city\",placeholder:\"Enter City\"}),a.a.createElement(\"input\",{type:\"text\",name:\"country\",placeholder:\"Enter Country\"}),a.a.createElement(w.a,{type:\"primary\"},\"Get My Weather\")))},E=function(e){return a.a.createElement(\"div\",null,e.temperature&&a.a.createElement(\"p\",null,\"Temperature: \",e.temperature),e.description&&a.a.createElement(\"p\",null,\"Conditions: \",e.description),e.error&&a.a.createElement(\"p\",null,e.error))},b=\"52c22aabd27dfb2bbb026631979c4c29\",g=function(e){function t(){var e,r;Object(s.a)(this,t);for(var n=arguments.length,a=new Array(n),o=0;o<n;o++)a[o]=arguments[o];return(r=Object(m.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(a)))).state={temperature:void 0,city:void 0,country:void 0,description:void 0},r.getWeather=function(){var e=Object(l.a)(u.a.mark(function e(t){var n,a,o,c;return u.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t.preventDefault(),n=t.target.elements.city.value,a=t.target.elements.country.value,e.next=5,fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(n,\",\").concat(a,\"&APPID=\").concat(b,\"&units=imperial\"));case 5:return o=e.sent,e.next=8,o.json();case 8:c=e.sent,n&&a?r.setState({temperature:c.main.temp,city:c.name,country:c.sys.country,description:c.weather[0].description}):r.setState({temperature:void 0,city:void 0,country:void 0,description:void 0,error:\"Please enter the correct city and country\"});case 10:case\"end\":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),r}return Object(h.a)(t,e),Object(p.a)(t,[{key:\"render\",value:function(){return a.a.createElement(\"div\",{className:\"wrapper\"},a.a.createElement(y,null),a.a.createElement(f,{getWeather:this.getWeather}),a.a.createElement(E,{temperature:this.state.temperature,city:this.state.temperature,country:this.state.country,description:this.state.description,error:this.state.error}))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(a.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[16,1,2]]]);","extractedComments":[]}